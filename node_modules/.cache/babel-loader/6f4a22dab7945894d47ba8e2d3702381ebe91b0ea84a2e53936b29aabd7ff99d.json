{"ast":null,"code":"var _jsxFileName = \"/Users/rohitkumar/Desktop/GDSC/QuickMark-Preview/src/markdown/markdownreact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Markdown from 'markdown-to-jsx';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarkdownReact = () => {\n  _s();\n  const [markdown, setMarkdown] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"left-side\",\n        value: markdown,\n        onChange: e => setMarkdown(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Markdown, {\n        children: markdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_s(MarkdownReact, \"VgmOYLpa/B4R4IjlDC+VW94zztk=\");\n_c = MarkdownReact;\nexport default MarkdownReact;\nvar _c;\n$RefreshReg$(_c, \"MarkdownReact\");","map":{"version":3,"names":["React","useState","Markdown","jsxDEV","_jsxDEV","MarkdownReact","_s","markdown","setMarkdown","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/rohitkumar/Desktop/GDSC/QuickMark-Preview/src/markdown/markdownreact.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Markdown from 'markdown-to-jsx';\nimport './style.css';\n\nconst MarkdownReact = () => {\n    const [markdown, setMarkdown] = useState(\"\");\n  \n    return (\n        <div className='center-div'>\n            <div className='left-side'>\n                <span>Edit</span>\n            <textarea className=\"left-side\" value={markdown} onChange={(e) => setMarkdown(e.target.value)} >\n            </textarea>\n            </div>\n            <div className=\"right-side\" >\n                <span>Preview</span>\n                <Markdown>{markdown}</Markdown>\n            </div>\n        </div>\n    );\n};\n\nexport default MarkdownReact;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,oBACIG,OAAA;IAAKK,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBN,OAAA;MAAKK,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBN,OAAA;QAAAM,QAAA,EAAM;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACrBV,OAAA;QAAUK,SAAS,EAAC,WAAW;QAACM,KAAK,EAAER,QAAS;QAACS,QAAQ,EAAGC,CAAC,IAAKT,WAAW,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNV,OAAA;MAAKK,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBN,OAAA;QAAAM,QAAA,EAAM;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpBV,OAAA,CAACF,QAAQ;QAAAQ,QAAA,EAAEH;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACR,EAAA,CAhBID,aAAa;AAAAc,EAAA,GAAbd,aAAa;AAkBnB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}