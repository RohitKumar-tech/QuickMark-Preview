{"ast":null,"code":"var _jsxFileName = \"/Users/rohitkumar/Desktop/GDSC/QuickMark-Preview/src/markdown/markdownreact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Markdown from 'markdown-to-jsx';\nimport './style.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MarkdownReact = () => {\n  _s();\n  const [markdown, setMarkdown] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QuickMark-Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"left-side\",\n          value: markdown,\n          onChange: e => setMarkdown(e.target.value),\n          rows: \"15\",\n          cols: \"28\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Markdown, {\n          children: markdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_s(MarkdownReact, \"VgmOYLpa/B4R4IjlDC+VW94zztk=\");\n_c = MarkdownReact;\nexport default MarkdownReact;\nvar _c;\n$RefreshReg$(_c, \"MarkdownReact\");","map":{"version":3,"names":["React","useState","Markdown","jsxDEV","_jsxDEV","Fragment","_Fragment","MarkdownReact","_s","markdown","setMarkdown","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","rows","cols","_c","$RefreshReg$"],"sources":["/Users/rohitkumar/Desktop/GDSC/QuickMark-Preview/src/markdown/markdownreact.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Markdown from 'markdown-to-jsx';\nimport './style.css';\n\nconst MarkdownReact = () => {\n    const [markdown, setMarkdown] = useState(\"\");\n  \n    return (\n        <div className='center-div'>\n            <h1>QuickMark-Preview</h1>\n            <>\n            <div className='left-side'>\n                <p>Edit</p>\n            <textarea className=\"left-side\" value={markdown} onChange={(e) => setMarkdown(e.target.value)} rows=\"15\" cols=\"28\">\n            </textarea>\n            </div>\n            <div className=\"right-side\" >\n                <text>Preview</text>\n                <Markdown>{markdown}</Markdown>\n            </div>\n            </>\n        </div>\n    );\n};\n\nexport default MarkdownReact;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,oBACIG,OAAA;IAAKO,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBR,OAAA;MAAAQ,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BZ,OAAA,CAAAE,SAAA;MAAAM,QAAA,gBACAR,OAAA;QAAKO,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtBR,OAAA;UAAAQ,QAAA,EAAG;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACfZ,OAAA;UAAUO,SAAS,EAAC,WAAW;UAACM,KAAK,EAAER,QAAS;UAACS,QAAQ,EAAGC,CAAC,IAAKT,WAAW,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAACI,IAAI,EAAC,IAAI;UAACC,IAAI,EAAC;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNZ,OAAA;QAAKO,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBR,OAAA;UAAAQ,QAAA,EAAM;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpBZ,OAAA,CAACF,QAAQ;UAAAU,QAAA,EAAEH;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA,eACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd,CAAC;AAACR,EAAA,CAnBID,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AAqBnB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}